// Code generated by qtc from "go.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line protoc-gen-grpcer/go.qtpl:1
package main

//line protoc-gen-grpcer/go.qtpl:3
import "time"

//line protoc-gen-grpcer/go.qtpl:4
import "google.golang.org/protobuf/types/descriptorpb"

//line protoc-gen-grpcer/go.qtpl:6
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line protoc-gen-grpcer/go.qtpl:6
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line protoc-gen-grpcer/go.qtpl:6
func StreamXGo(qw422016 *qt422016.Writer, svc *descriptorpb.ServiceDescriptorProto, info FileInfo) {
//line protoc-gen-grpcer/go.qtpl:6
	qw422016.N().S(`
// Generated with protoc-gen-grpcer
//	from `)
//line protoc-gen-grpcer/go.qtpl:8
	qw422016.N().Q(info.ProtoFile)
//line protoc-gen-grpcer/go.qtpl:8
	qw422016.N().S(`
//	at   `)
//line protoc-gen-grpcer/go.qtpl:9
	qw422016.N().S(time.Now().String())
//line protoc-gen-grpcer/go.qtpl:9
	qw422016.N().S(`
//
// DO NOT EDIT!

package `)
//line protoc-gen-grpcer/go.qtpl:13
	qw422016.N().S(info.Package)
//line protoc-gen-grpcer/go.qtpl:13
	qw422016.N().S(`

import (
	"context"
	"fmt"
	"io"

	grpc "google.golang.org/grpc"
	grpcer "github.com/UNO-SOFT/grpcer"

	pb `)
//line protoc-gen-grpcer/go.qtpl:23
	qw422016.N().Q(info.Import)
//line protoc-gen-grpcer/go.qtpl:23
	qw422016.N().S(`
	`)
//line protoc-gen-grpcer/go.qtpl:24
	for _, dep := range info.Dependencies {
//line protoc-gen-grpcer/go.qtpl:24
		qw422016.N().Q(dep)
//line protoc-gen-grpcer/go.qtpl:24
		qw422016.N().S(`
	`)
//line protoc-gen-grpcer/go.qtpl:25
	}
//line protoc-gen-grpcer/go.qtpl:25
	qw422016.N().S(`
)

type client struct {
	pb.`)
//line protoc-gen-grpcer/go.qtpl:29
	qw422016.N().S(svc.GetName())
//line protoc-gen-grpcer/go.qtpl:29
	qw422016.N().S(`Client
	m map[string]inputAndCall
}

func (c client) List() []string {
	names := make([]string, 0, len(c.m))
	for k := range c.m {
		names = append(names, k)
	}
	return names
}

func (c client) Input(name string) interface{} {
	iac := c.m[name]
	if iac.Input == nil {
		return nil
	}
	return iac.Input()
}

func (c client) Call(name string, ctx context.Context, in interface{}, opts ...grpc.CallOption) (grpcer.Receiver, error) {
	iac := c.m[name]
	if iac.Call == nil {
		return nil, fmt.Errorf("name %q not found", name)
	}
	return iac.Call(ctx, in, opts...)
}

func (c client) Tags(name string) []string { return c.m[name].Tags }

func NewClient(cc *grpc.ClientConn) grpcer.Client {
	c := pb.New`)
//line protoc-gen-grpcer/go.qtpl:60
	qw422016.N().S(svc.GetName())
//line protoc-gen-grpcer/go.qtpl:60
	qw422016.N().S(`Client(cc)
	return client{
		`)
//line protoc-gen-grpcer/go.qtpl:62
	qw422016.N().S(svc.GetName())
//line protoc-gen-grpcer/go.qtpl:62
	qw422016.N().S(`Client: c,
		m: map[string]inputAndCall{
		`)
//line protoc-gen-grpcer/go.qtpl:64
	for _, m := range svc.GetMethod() {
//line protoc-gen-grpcer/go.qtpl:64
		qw422016.N().Q(m.GetName())
//line protoc-gen-grpcer/go.qtpl:64
		qw422016.N().S(`: inputAndCall{
			Input: func() interface{} { return new(`)
//line protoc-gen-grpcer/go.qtpl:65
		qw422016.N().S(changePkgTo(info.Import, "pb", trimLeftDot(m.GetInputType())))
//line protoc-gen-grpcer/go.qtpl:65
		qw422016.N().S(`) },
			Call: func(ctx context.Context, in interface{}, opts ...grpc.CallOption) (grpcer.Receiver, error) {
				input := in.(*`)
//line protoc-gen-grpcer/go.qtpl:67
		qw422016.N().S(changePkgTo(info.Import, "pb", trimLeftDot(m.GetInputType())))
//line protoc-gen-grpcer/go.qtpl:67
		qw422016.N().S(`)
				res, err := c.`)
//line protoc-gen-grpcer/go.qtpl:68
		qw422016.N().S(m.GetName())
//line protoc-gen-grpcer/go.qtpl:68
		qw422016.N().S(`(ctx, input, opts...)
				if err != nil {
					return &onceRecv{Out:res}, err
				}
				`)
//line protoc-gen-grpcer/go.qtpl:72
		if m.GetServerStreaming() {
//line protoc-gen-grpcer/go.qtpl:73
			qw422016.N().S(` return multiRecv(func() (interface{}, error) { return res.Recv() }), nil
				`)
//line protoc-gen-grpcer/go.qtpl:75
		} else {
//line protoc-gen-grpcer/go.qtpl:75
			qw422016.N().S(` return &onceRecv{Out:res}, err
				`)
//line protoc-gen-grpcer/go.qtpl:76
		}
//line protoc-gen-grpcer/go.qtpl:76
		qw422016.N().S(`
			},
			`)
//line protoc-gen-grpcer/go.qtpl:78
		if tags := getTags(m); len(tags) != 0 {
//line protoc-gen-grpcer/go.qtpl:79
			qw422016.N().S(`Tags: []string{ `)
//line protoc-gen-grpcer/go.qtpl:79
			for i, t := range tags {
//line protoc-gen-grpcer/go.qtpl:79
				if i != 0 {
//line protoc-gen-grpcer/go.qtpl:79
					qw422016.N().S(`, `)
//line protoc-gen-grpcer/go.qtpl:80
				}
//line protoc-gen-grpcer/go.qtpl:80
				qw422016.N().Q(t)
//line protoc-gen-grpcer/go.qtpl:80
			}
//line protoc-gen-grpcer/go.qtpl:80
			qw422016.N().S(` },`)
//line protoc-gen-grpcer/go.qtpl:80
		}
//line protoc-gen-grpcer/go.qtpl:80
		qw422016.N().S(`
		},
		`)
//line protoc-gen-grpcer/go.qtpl:82
	}
//line protoc-gen-grpcer/go.qtpl:82
	qw422016.N().S(`
		},
	}
}

type inputAndCall struct {
	Input func() interface{}
	Call func(ctx context.Context, in interface{}, opts ...grpc.CallOption) (grpcer.Receiver, error)
	Tags []string
}

type onceRecv struct {
	Out interface{}
	done bool
}
func (o *onceRecv) Recv() (interface{}, error) {
	if o.done {
		return nil, io.EOF
	}
	out := o.Out
	o.done, o.Out = true, nil
	return out, nil
}

type multiRecv func() (interface{}, error)
func (m multiRecv) Recv() (interface{}, error) {
	return m()
}

var _ = multiRecv(nil) // against "unused"
`)
//line protoc-gen-grpcer/go.qtpl:112
}

//line protoc-gen-grpcer/go.qtpl:112
func WriteXGo(qq422016 qtio422016.Writer, svc *descriptorpb.ServiceDescriptorProto, info FileInfo) {
//line protoc-gen-grpcer/go.qtpl:112
	qw422016 := qt422016.AcquireWriter(qq422016)
//line protoc-gen-grpcer/go.qtpl:112
	StreamXGo(qw422016, svc, info)
//line protoc-gen-grpcer/go.qtpl:112
	qt422016.ReleaseWriter(qw422016)
//line protoc-gen-grpcer/go.qtpl:112
}

//line protoc-gen-grpcer/go.qtpl:112
func XGo(svc *descriptorpb.ServiceDescriptorProto, info FileInfo) string {
//line protoc-gen-grpcer/go.qtpl:112
	qb422016 := qt422016.AcquireByteBuffer()
//line protoc-gen-grpcer/go.qtpl:112
	WriteXGo(qb422016, svc, info)
//line protoc-gen-grpcer/go.qtpl:112
	qs422016 := string(qb422016.B)
//line protoc-gen-grpcer/go.qtpl:112
	qt422016.ReleaseByteBuffer(qb422016)
//line protoc-gen-grpcer/go.qtpl:112
	return qs422016
//line protoc-gen-grpcer/go.qtpl:112
}
